name: Node.js Selenium Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Create build artifact
      run: tar -czf www-build.tar.gz src/ tests/ package.json package-lock.json

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: www-build
        path: www-build.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest
    services:
      selenium:
        image: seleniarm/standalone-chromium:latest
        ports:
          - 4444:4444
        # Improvement 1: Use a built-in healthcheck to wait for Selenium.
        # This is more reliable than a manual wait step.
        options: >-
          --health-cmd "curl --fail http://localhost:4444/wd/hub/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: www-build
    - name: Extract artifact
      run: tar -xzf www-build.tar.gz
    - name: Install dependencies
      run: npm ci
    - name: Run unit tests
      run: npm test

    # Improvement 2: Wait for the Node.js server to be ready.
    # This is more reliable than a fixed "sleep 5".
    - name: Start Node.js server and wait for it to be ready
      run: |
        node src/server.js &
        while ! curl --silent --fail http://localhost:3000; do
          echo "Waiting for Node.js server..."
          sleep 2
        done
        echo "Node.js server is up!"

    - name: Run Selenium integration tests
      run: node tests/SeleniumTest.mjs github