name: Node.js Selenium Testing

# This workflow runs on any push or pull request to the main branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # The 'build' job prepares the application files
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      # 'npm ci' is faster and more reliable for CI environments
      run: npm ci

    - name: Create build artifact
      # Package all necessary files into a compressed tarball
      run: tar -czf www-build.tar.gz src/ tests/ package.json package-lock.json

    - name: Upload artifact for test job
      uses: actions/upload-artifact@v4
      with:
        name: www-build
        path: www-build.tar.gz

  # The 'test' job runs after 'build' is successful
  test:
    needs: build
    runs-on: ubuntu-latest
    
    # Define the services needed for this job
    services:
      # This starts a Selenium container and names it 'selenium'
      selenium:
        # Use the ARM-compatible image, which also works here
        image: seleniarm/standalone-chromium:latest
        # This healthcheck makes the job wait until Selenium is fully ready
        options: >-
          --health-cmd "curl --fail http://localhost:4444/wd/hub/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: www-build

    - name: Extract artifact files
      run: tar -xzf www-build.tar.gz

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm test

    - name: Start Node.js server and wait for it to be ready
      run: |
        # Start the server in the background
        node src/server.js &
        # Actively wait for the server to respond before continuing
        while ! curl --silent --fail http://localhost:3000; do
          echo "Waiting for Node.js server..."
          sleep 2
        done
        echo "Node.js server is up!"

    - name: Run Selenium integration tests
      # Use the 'github' argument to tell the script to use CI URLs
      run: node tests/SeleniumTest.mjs github